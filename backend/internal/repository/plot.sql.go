// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: plot.sql

package repository

import (
	"context"
	"time"
)

const createPlot = `-- name: CreatePlot :one
INSERT INTO "plot" (farm_id)
VALUES ($1)
RETURNING id, farm_id, crop_id, planted_at, harvest_at
`

func (q *Queries) CreatePlot(ctx context.Context, farmID int32) (Plot, error) {
	row := q.db.QueryRow(ctx, createPlot, farmID)
	var i Plot
	err := row.Scan(
		&i.ID,
		&i.FarmID,
		&i.CropID,
		&i.PlantedAt,
		&i.HarvestAt,
	)
	return i, err
}

const getPlotsByFarmID = `-- name: GetPlotsByFarmID :many
SELECT id, farm_id, crop_id, planted_at, harvest_at FROM "plot" WHERE farm_id = $1
`

func (q *Queries) GetPlotsByFarmID(ctx context.Context, farmID int32) ([]Plot, error) {
	rows, err := q.db.Query(ctx, getPlotsByFarmID, farmID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Plot
	for rows.Next() {
		var i Plot
		if err := rows.Scan(
			&i.ID,
			&i.FarmID,
			&i.CropID,
			&i.PlantedAt,
			&i.HarvestAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const harvestPlotByID = `-- name: HarvestPlotByID :exec
UPDATE "plot"
SET crop_id = NULL,
    planted_at = NULL,
    harvest_at = NULL
WHERE id = $1
`

func (q *Queries) HarvestPlotByID(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, harvestPlotByID, id)
	return err
}

const sowPlotByIDWithCrop = `-- name: SowPlotByIDWithCrop :one
UPDATE "plot"
SET crop_id = $2,
    planted_at = $3,
    harvest_at = $4
WHERE id = $1
RETURNING id, farm_id, crop_id, planted_at, harvest_at
`

type SowPlotByIDWithCropParams struct {
	ID        int32
	CropID    int32
	PlantedAt *time.Time
	HarvestAt *time.Time
}

func (q *Queries) SowPlotByIDWithCrop(ctx context.Context, arg SowPlotByIDWithCropParams) (Plot, error) {
	row := q.db.QueryRow(ctx, sowPlotByIDWithCrop,
		arg.ID,
		arg.CropID,
		arg.PlantedAt,
		arg.HarvestAt,
	)
	var i Plot
	err := row.Scan(
		&i.ID,
		&i.FarmID,
		&i.CropID,
		&i.PlantedAt,
		&i.HarvestAt,
	)
	return i, err
}
